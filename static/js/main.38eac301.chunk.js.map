{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","useState","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","map","todoItem","key","ReactDom","render","document","getElementById"],"mappings":"gKAgBeA,MAZf,SAAkBC,GAChB,OACE,yBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,MAGxB,4BAAKH,EAAMI,QCqBFC,MAzBf,SAAmBL,GACjB,MAAkCM,mBAAS,IAAG,mBAAvCC,EAAS,KAAEC,EAAY,KAQ9B,OACE,yBAAKC,UAAU,QACb,2BAAOC,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKoBG,KAAK,OAAOD,MAAOP,IAElD,4BACEN,QAAS,WACPD,EAAMgB,MAAMT,GACZC,EAAa,MAGf,wCC2BOS,MAjDf,WAGE,MAA0BX,mBAAS,IAAG,mBAA/BY,EAAK,KAAEC,EAAQ,KActB,SAASC,EAAWjB,GAClBgB,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUrB,QAKvB,OACE,yBAAKM,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAS,CAACO,MAvBf,SAAiBT,GACfY,GAAS,SAACE,GAGR,MAAM,GAAN,mBAAWA,GAAS,CAAEd,UAoBtB,6BACE,4BACGW,EAAMO,KAAI,SAACC,EAAUF,GAAK,OAGzB,kBAAC,EAAQ,CACPG,IAAKH,EACLrB,GAAIqB,EACJpB,KAAMsB,EACNxB,UAAWkB,WCxCzBQ,IAASC,OAAO,kBAAC,EAAG,MAAKC,SAASC,eAAe,U","file":"static/js/main.38eac301.chunk.js","sourcesContent":["// when the text be clicked,\n// pass the item's id to onCheck() which will trigger the deleteItem function in App\nimport React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","// In this InputArea component\n// we have one function that can store the user input in array\n// after user click the button\nimport React, { useState } from \"react\";\n\n// Component can be passed as props\n// props are like function argument\nfunction InputArea(props) {\n  const [inputText, setInputText] = useState(\"\");\n  // handleChange function:\n  // when user click the add button, handle change function will update the new user input\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputText} />\n\n      <button\n        onClick={() => {\n          props.onAdd(inputText); // after button be clicked, call onAdd function and setInputText function\n          setInputText(\"\"); // reset inputText as empty String\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  // use useState to track the user input\n  // and store it in array\n  const [items, setItems] = useState([]);\n\n  // addItem functin:\n  // call setItem function in addItem function to update user input to array\n  function addItem(inputText) {\n    setItems((prevItems) => {\n      // use spread operator to combine 2 array\n      // ... copy all of existing array into another array\n      return [...prevItems, inputText];\n    });\n  }\n  // delete function:\n  // use filter() that return the array that index is not equal to id\n  // in this way, we can display an ittem list that do not have deleted item\n  function deleteItem(id) {\n    setItems((prevItems) => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            // map the input text with their index\n            // return thte ToDoItem component that help us to delete the text\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}